# Docker Compose for Monitoring Stack - Gasolinera JSM
version: '3.8'

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: gasolinera_prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./config/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - ./config/monitoring/recording_rules.yml:/etc/prometheus/recording_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--storage.tsdb.retention.size=50GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:9090/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Alertmanager - Alert routing and notification
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: gasolinera_alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ./config/monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: gasolinera_grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./config/monitoring/grafana-datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_FEATURE_TOGGLES_ENABLE=ngalert
      - GF_UNIFIED_ALERTING_ENABLED=true
      - GF_ALERTING_ENABLED=false
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: gasolinera_node_exporter
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  # PostgreSQL Exporter - Database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: gasolinera_postgres_exporter
    ports:
      - '9187:9187'
    environment:
      - DATA_SOURCE_NAME=postgresql://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
      - PG_EXPORTER_EXTEND_QUERY_PATH=/etc/postgres_exporter/queries.yaml
    volumes:
      - ./config/monitoring/postgres-queries.yaml:/etc/postgres_exporter/queries.yaml
    networks:
      - monitoring
      - gasolinera-jsm-ultimate_default
    restart: unless-stopped
    depends_on:
      - postgres

  # Redis Exporter - Cache metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.52.0
    container_name: gasolinera_redis_exporter
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - monitoring
      - gasolinera-jsm-ultimate_default
    restart: unless-stopped
    depends_on:
      - redis

  # RabbitMQ Exporter - Message queue metrics
  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:v1.0.0-RC19
    container_name: gasolinera_rabbitmq_exporter
    ports:
      - '9419:9419'
    environment:
      - RABBIT_URL=http://rabbitmq:15672
      - RABBIT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBIT_PASSWORD=${RABBITMQ_DEFAULT_PASS}
      - PUBLISH_PORT=9419
      - LOG_LEVEL=info
    networks:
      - monitoring
      - gasolinera-jsm-ultimate_default
    restart: unless-stopped
    depends_on:
      - rabbitmq

  # JMX Exporter for JVM metrics (shared config)
  jmx-exporter:
    image: sscaling/jmx-prometheus-exporter:0.19.0
    container_name: gasolinera_jmx_exporter
    ports:
      - '8080:8080'
    volumes:
      - ./config/monitoring/jmx-config.yaml:/opt/jmx_prometheus_httpserver.jar
    command: ['8080', '/opt/jmx_prometheus_httpserver.jar']
    networks:
      - monitoring
    restart: unless-stopped

  # Jaeger - Distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.47
    container_name: gasolinera_jaeger
    ports:
      - '16686:16686' # Jaeger UI
      - '14268:14268' # HTTP collector
      - '14250:14250' # gRPC collector
      - '6831:6831/udp' # UDP collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    networks:
      - monitoring
    restart: unless-stopped

  # Loki - Log aggregation
  loki:
    image: grafana/loki:2.8.0
    container_name: gasolinera_loki
    ports:
      - '3100:3100'
    volumes:
      - ./config/monitoring/loki-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring
    restart: unless-stopped

  # Promtail - Log shipper
  promtail:
    image: grafana/promtail:2.8.0
    container_name: gasolinera_promtail
    volumes:
      - ./config/monitoring/promtail-config.yaml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki

  # Blackbox Exporter - Endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: gasolinera_blackbox_exporter
    ports:
      - '9115:9115'
    volumes:
      - ./config/monitoring/blackbox-config.yaml:/etc/blackbox_exporter/config.yml
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    networks:
      - monitoring
    restart: unless-stopped

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: gasolinera_cadvisor
    ports:
      - '8081:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring
    restart: unless-stopped

  # Thanos Sidecar - Long-term storage
  thanos-sidecar:
    image: thanosio/thanos:v0.31.0
    container_name: gasolinera_thanos_sidecar
    ports:
      - '19191:19191'
      - '10901:10901'
    volumes:
      - prometheus_data:/prometheus
      - ./config/monitoring/thanos-sidecar.yaml:/etc/thanos/sidecar.yaml
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus:9090'
      - '--grpc-address=0.0.0.0:10901'
      - '--http-address=0.0.0.0:19191'
      - '--objstore.config-file=/etc/thanos/sidecar.yaml'
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # Performance Testing with K6
  k6:
    image: grafana/k6:0.45.0
    container_name: gasolinera_k6
    volumes:
      - ./performance-tests:/scripts
    environment:
      - K6_PROMETHEUS_RW_SERVER_URL=http://prometheus:9090/api/v1/write
      - K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM=true
    networks:
      - monitoring
      - gasolinera-jsm-ultimate_default
    profiles:
      - performance-testing

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local

networks:
  monitoring:
    driver: bridge
    name: gasolinera_monitoring
  gasolinera-jsm-ultimate_default:
    external: true
