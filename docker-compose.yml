services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-gasolinera_db}
      POSTGRES_USER: ${POSTGRES_USER:-gasolinera_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-gasolinera_password}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U ${POSTGRES_USER:-gasolinera_user} -d ${POSTGRES_DB:-gasolinera_db}',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - gasolinera-network

  redis:
    image: redis:7-alpine
    container_name: redis
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - gasolinera-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-gasolinera_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-gasolinera_password}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VIRTUAL_HOST:-gasolinera_vhost}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - gasolinera-network

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
      SPAN_STORAGE_TYPE: memory
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:14269/',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - gasolinera-network

  vault:
    image: hashicorp/vault:1.15.4
    container_name: vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_TOKEN:-gasolinera_vault_token_2024}
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
      VAULT_ADDR: 'http://0.0.0.0:8200'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - ./scripts/vault-init.sh:/vault/scripts/vault-init.sh
    command: 'server -dev -dev-root-token-id=${VAULT_TOKEN:-gasolinera_vault_token_2024} -dev-listen-address=0.0.0.0:8200'
    healthcheck:
      test: ['CMD', 'vault', 'status']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - gasolinera-network

  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: api-gateway
    depends_on:
      auth-service:
        condition: service_healthy
      redemption-service:
        condition: service_healthy
      station-service:
        condition: service_healthy
      ad-engine:
        condition: service_healthy
      coupon-service:
        condition: service_healthy
      raffle-service:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx1024m -Xms512m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    restart: unless-stopped
    networks:
      - gasolinera-network

  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    container_name: auth-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

  redemption-service:
    build:
      context: .
      dockerfile: services/redemption-service/Dockerfile
    container_name: redemption-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

  station-service:
    build:
      context: .
      dockerfile: services/station-service/Dockerfile
    container_name: station-service
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

  ad-engine:
    build:
      context: .
      dockerfile: services/ad-engine/Dockerfile
    container_name: ad-engine
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

  raffle-service:
    build:
      context: .
      dockerfile: services/raffle-service/Dockerfile
    container_name: raffle-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

  coupon-service:
    build:
      context: .
      dockerfile: services/coupon-service/Dockerfile
    container_name: coupon-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      jaeger:
        condition: service_healthy
      vault:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - VAULT_TOKEN=${VAULT_TOKEN:-gasolinera_vault_token_2024}
      - VAULT_ADDR=http://vault:8200
      - JAVA_OPTS=-Xmx512m -Xms256m
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - gasolinera-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  vault_data:

networks:
  gasolinera-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
