input {
  # Input desde TCP para logs directos de aplicaciones
  tcp {
    port => 5000
    codec => json_lines
    tags => ["tcp-input"]
  }

  # Input desde Beats (Filebeat)
  beats {
    port => 5044
    tags => ["beats-input"]
  }

  # Input desde archivos de log locales
  file {
    path => "/logs/*.log"
    start_position => "beginning"
    codec => json
    tags => ["file-input"]
  }
}

filter {
  # Parsear timestamp si existe
  if [timestamp] {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
  }

  # Agregar información del servicio
  if [mdc][serviceName] {
    mutate {
      add_field => { "service" => "%{[mdc][serviceName]}" }
    }
  } else {
    mutate {
      add_field => { "service" => "gasolinera-unknown" }
    }
  }

  # Procesar correlation ID
  if [mdc][correlationId] {
    mutate {
      add_field => { "correlation_id" => "%{[mdc][correlationId]}" }
    }
  }

  # Procesar información de usuario
  if [mdc][userId] {
    mutate {
      add_field => { "user_id" => "%{[mdc][userId]}" }
    }
  }

  # Procesar información de tracing
  if [mdc][traceId] {
    mutate {
      add_field => { "trace_id" => "%{[mdc][traceId]}" }
    }
  }

  if [mdc][spanId] {
    mutate {
      add_field => { "span_id" => "%{[mdc][spanId]}" }
    }
  }

  # Categorizar logs por tipo
  if [event][category] {
    mutate {
      add_field => { "log_category" => "%{[event][category]}" }
    }
  } else {
    mutate {
      add_field => { "log_category" => "APPLICATION" }
    }
  }

  # Procesar logs de negocio
  if [log_category] == "BUSINESS" {
    mutate {
      add_field => { "business_operation" => "%{[event][action]}" }
      add_tag => ["business-log"]
    }
  }

  # Procesar logs de seguridad
  if [log_category] == "SECURITY" {
    mutate {
      add_tag => ["security-log"]
    }

    if [context][ipAddress] {
      mutate {
        add_field => { "client_ip" => "%{[context][ipAddress]}" }
      }
    }
  }

  # Procesar logs de performance
  if [log_category] == "PERFORMANCE" {
    mutate {
      add_tag => ["performance-log"]
    }

    if [context][durationMs] {
      mutate {
        add_field => { "duration_ms" => "%{[context][durationMs]}" }
        convert => { "duration_ms" => "integer" }
      }
    }
  }

  # Procesar logs HTTP
  if [event][category] == "HTTP" {
    mutate {
      add_tag => ["http-log"]
    }

    if [context][method] {
      mutate {
        add_field => { "http_method" => "%{[context][method]}" }
      }
    }

    if [context][uri] {
      mutate {
        add_field => { "http_uri" => "%{[context][uri]}" }
      }
    }

    if [context][statusCode] {
      mutate {
        add_field => { "http_status" => "%{[context][statusCode]}" }
        convert => { "http_status" => "integer" }
      }
    }
  }

  # Procesar información de excepciones
  if [exception] {
    mutate {
      add_field => { "exception_class" => "%{[exception][class]}" }
      add_field => { "exception_message" => "%{[exception][message]}" }
      add_tag => ["error-log"]
    }
  }

  # Agregar geolocalización basada en IP (opcional)
  if [client_ip] and [client_ip] != "127.0.0.1" and [client_ip] != "localhost" {
    geoip {
      source => "client_ip"
      target => "geoip"
    }
  }

  # Limpiar campos innecesarios
  mutate {
    remove_field => [ "host", "agent", "ecs", "input", "log" ]
  }
}

output {
  # Output principal a Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "gasolinera-logs-%{+YYYY.MM.dd}"
    template_name => "gasolinera-logs"
    template => "/usr/share/logstash/templates/gasolinera-template.json"
    template_overwrite => true
  }

  # Output específico para logs de negocio
  if "business-log" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "gasolinera-business-%{+YYYY.MM.dd}"
    }
  }

  # Output específico para logs de seguridad
  if "security-log" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "gasolinera-security-%{+YYYY.MM.dd}"
    }
  }

  # Output específico para logs de performance
  if "performance-log" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "gasolinera-performance-%{+YYYY.MM.dd}"
    }
  }

  # Output para debugging (solo en desarrollo)
  if [service] == "gasolinera-unknown" {
    stdout {
      codec => rubydebug
    }
  }
}