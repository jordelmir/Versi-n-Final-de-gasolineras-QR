version: '3.8'

services:
  # HashiCorp Vault
  vault:
    image: hashicorp/vault:1.15.2
    container_name: gasolinera-vault
    restart: unless-stopped
    ports:
      - '8200:8200'
      - '8201:8201'
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8200'
      VAULT_LOCAL_CONFIG: |
        {
          "backend": {
            "file": {
              "path": "/vault/data"
            }
          },
          "listener": {
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_disable": true
            }
          },
          "ui": true,
          "disable_mlock": true,
          "api_addr": "http://0.0.0.0:8200",
          "cluster_addr": "http://0.0.0.0:8201"
        }
      VAULT_DEV_ROOT_TOKEN_ID: 'gasolinera-dev-token'
      VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
    volumes:
      - vault_data:/vault/data
      - vault_logs:/vault/logs
      - ./vault-config.hcl:/vault/config/vault.hcl:ro
      - ./policies:/vault/policies:ro
    cap_add:
      - IPC_LOCK
    command: vault server -config=/vault/config/vault.hcl
    healthcheck:
      test: ['CMD', 'vault', 'status']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - gasolinera-network

  # Vault UI (Alternative web interface)
  vault-ui:
    image: djenriquez/vault-ui:latest
    container_name: gasolinera-vault-ui
    restart: unless-stopped
    ports:
      - '8000:8000'
    environment:
      VAULT_URL_DEFAULT: 'http://vault:8200'
      VAULT_AUTH_DEFAULT: 'TOKEN'
    depends_on:
      - vault
    networks:
      - gasolinera-network

  # PostgreSQL for Vault storage (production setup)
  vault-postgres:
    image: postgres:15-alpine
    container_name: gasolinera-vault-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: vault_db
      POSTGRES_USER: vault_user
      POSTGRES_PASSWORD: vault_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - vault_postgres_data:/var/lib/postgresql/data
      - ./init-vault-db.sql:/docker-entrypoint-initdb.d/init-vault-db.sql:ro
    ports:
      - '5433:5432' # Different port to avoid conflicts
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U vault_user -d vault_db']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - gasolinera-network

  # Vault Agent for automatic authentication and secret retrieval
  vault-agent:
    image: hashicorp/vault:1.15.2
    container_name: gasolinera-vault-agent
    restart: unless-stopped
    environment:
      VAULT_ADDR: 'http://vault:8200'
    volumes:
      - ./vault-agent.hcl:/vault/config/vault-agent.hcl:ro
      - vault_agent_data:/vault/agent
      - /tmp/vault-secrets:/vault/secrets
    command: vault agent -config=/vault/config/vault-agent.hcl
    depends_on:
      - vault
    networks:
      - gasolinera-network

  # Consul for Vault HA backend (optional)
  consul:
    image: hashicorp/consul:1.16.1
    container_name: gasolinera-consul
    restart: unless-stopped
    ports:
      - '8500:8500'
      - '8600:8600/udp'
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: >
      consul agent
      -server
      -bootstrap-expect=1
      -datacenter=dc1
      -data-dir=/consul/data
      -node=consul-server
      -bind=0.0.0.0
      -client=0.0.0.0
      -retry-join=consul
      -ui-config-enabled=true
    volumes:
      - consul_data:/consul/data
    networks:
      - gasolinera-network

volumes:
  vault_data:
    driver: local
  vault_logs:
    driver: local
  vault_postgres_data:
    driver: local
  vault_agent_data:
    driver: local
  consul_data:
    driver: local

networks:
  gasolinera-network:
    external: true
