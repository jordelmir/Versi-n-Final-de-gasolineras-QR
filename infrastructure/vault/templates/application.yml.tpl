# Application Configuration Template
# Generated by Vault Agent from secrets stored in Vault

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:gasolinera-service}

  datasource:
    {{- with secret "database/creds/gasolinera-readwrite" }}
    url: jdbc:postgresql://{{ with secret "gasolinera-jsm/data/shared/database" }}{{ .Data.data.host }}:{{ .Data.data.port }}/{{ .Data.data.database }}{{ end }}
    username: {{ .Data.username }}
    password: {{ .Data.password }}
    {{- end }}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  # Redis Configuration
  redis:
    {{- with secret "gasolinera-jsm/data/shared/redis" }}
    host: {{ .Data.data.host }}
    port: {{ .Data.data.port }}
    password: {{ .Data.data.password }}
    {{- end }}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  # RabbitMQ Configuration
  rabbitmq:
    {{- with secret "gasolinera-jsm/data/shared/rabbitmq" }}
    host: {{ .Data.data.host }}
    port: {{ .Data.data.port }}
    username: {{ .Data.data.username }}
    password: {{ .Data.data.password }}
    virtual-host: {{ .Data.data.virtual-host }}
    {{- end }}
    connection-timeout: 30000
    publisher-confirm-type: correlated
    publisher-returns: true

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

# JWT Configuration
app:
  jwt:
    {{- with secret "gasolinera-jsm/data/auth-service" }}
    secret: {{ .Data.data.jwt-secret }}
    issuer: {{ .Data.data.jwt-issuer }}
    access-token-expiration: {{ .Data.data.jwt-access-expiration }}
    refresh-token-expiration: {{ .Data.data.jwt-refresh-expiration }}
    {{- end }}

# Vault Configuration
vault:
  address: ${VAULT_ADDR:http://localhost:8200}
  role-id: ${VAULT_ROLE_ID:}
  secret-id: ${VAULT_SECRET_ID:}
  namespace: gasolinera-jsm
  database:
    enabled: true
  redis:
    enabled: true
  rabbitmq:
    enabled: true

# External APIs
external:
  apis:
    {{- with secret "gasolinera-jsm/data/shared/external-apis" }}
    google-maps:
      api-key: {{ .Data.data.google-maps-api-key }}
    sendgrid:
      api-key: {{ .Data.data.sendgrid-api-key }}
    twilio:
      api-key: {{ .Data.data.twilio-api-key }}
      auth-token: {{ .Data.data.twilio-auth-token }}
    {{- end }}

# Logging Configuration
logging:
  level:
    com.gasolinerajsm: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true