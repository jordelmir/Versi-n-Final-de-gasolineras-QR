# Prometheus Configuration for Gasolinera JSM
# Scrapes metrics from all microservices and infrastructure components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'gasolinera-jsm'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load alerting rules
rule_files:
  - "alerts.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Gasolinera JSM Microservices
  - job_name: 'auth-service'
    static_configs:
      - targets: ['auth-service:8080']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  - job_name: 'station-service'
    static_configs:
      - targets: ['station-service:8081']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  - job_name: 'coupon-service'
    static_configs:
      - targets: ['coupon-service:8082']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  - job_name: 'redemption-service'
    static_configs:
      - targets: ['redemption-service:8083']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  - job_name: 'raffle-service'
    static_configs:
      - targets: ['raffle-service:8084']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  - job_name: 'ad-engine'
    static_configs:
      - targets: ['ad-engine:8085']
    metrics_path: /actuator/prometheus
    scrape_interval: 15s
    scrape_timeout: 10s
    honor_labels: true

  # Infrastructure Components
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    scrape_timeout: 10s

  - job_name: 'rabbitmq-exporter'
    static_configs:
      - targets: ['rabbitmq-exporter:9419']
    scrape_interval: 30s
    scrape_timeout: 10s

  # Pushgateway for batch jobs
  - job_name: 'pushgateway'
    static_configs:
      - targets: ['pushgateway:9091']
    scrape_interval: 30s
    honor_labels: true

  # Blackbox exporter for endpoint monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://auth-service:8080/actuator/health
        - http://station-service:8081/actuator/health
        - http://coupon-service:8082/actuator/health
        - http://redemption-service:8083/actuator/health
        - http://raffle-service:8084/actuator/health
        - http://ad-engine:8085/actuator/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Service discovery for dynamic targets (Kubernetes)
  # Uncomment when deploying to Kubernetes
  # - job_name: 'kubernetes-pods'
  #   kubernetes_sd_configs:
  #     - role: pod
  #   relabel_configs:
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
  #       action: keep
  #       regex: true
  #     - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
  #       action: replace
  #       target_label: __metrics_path__
  #       regex: (.+)
  #     - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
  #       action: replace
  #       regex: ([^:]+)(?::\d+)?;(\d+)
  #       replacement: $1:$2
  #       target_label: __address__
  #     - action: labelmap
  #       regex: __meta_kubernetes_pod_label_(.+)
  #     - source_labels: [__meta_kubernetes_namespace]
  #       action: replace
  #       target_label: kubernetes_namespace
  #     - source_labels: [__meta_kubernetes_pod_name]
  #       action: replace
  #       target_label: kubernetes_pod_name

# Recording rules for aggregated metrics
recording_rules:
  - name: gasolinera_aggregated_metrics
    rules:
      # HTTP request rate by service
      - record: gasolinera:http_requests_rate
        expr: rate(http_requests_total[5m])
        labels:
          aggregation: "5m_rate"

      # HTTP error rate by service
      - record: gasolinera:http_error_rate
        expr: rate(http_requests_errors_total[5m]) / rate(http_requests_total[5m])
        labels:
          aggregation: "5m_rate"

      # Average response time by service
      - record: gasolinera:http_response_time_avg
        expr: rate(http_requests_duration_sum[5m]) / rate(http_requests_duration_count[5m])
        labels:
          aggregation: "5m_avg"

      # Business metrics aggregations
      - record: gasolinera:coupons_usage_rate
        expr: rate(coupons_used_total[1h])
        labels:
          aggregation: "1h_rate"

      - record: gasolinera:raffle_participation_rate
        expr: rate(raffles_participations_total[1h])
        labels:
          aggregation: "1h_rate"

      - record: gasolinera:user_registration_rate
        expr: rate(users_registrations_total[1h])
        labels:
          aggregation: "1h_rate"

      # System resource utilization
      - record: gasolinera:memory_utilization
        expr: (system_memory_used / system_memory_total) * 100
        labels:
          aggregation: "current"

      - record: gasolinera:cpu_utilization
        expr: system_cpu_usage_percent
        labels:
          aggregation: "current"

      - record: gasolinera:disk_utilization
        expr: (system_disk_used / system_disk_total) * 100
        labels:
          aggregation: "current"

# Remote write configuration (for long-term storage)
# Uncomment and configure for production use
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint/api/v1/read"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"