version: '3.8'

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: gasolinera-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--alertmanager.url=http://alertmanager:9093'
    networks:
      - gasolinera-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:9090/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana - Metrics visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: gasolinera-grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: gasolinera-admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_INSTALL_PLUGINS: grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - gasolinera-network
    depends_on:
      - prometheus
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # AlertManager - Alert routing and management
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: gasolinera-alertmanager
    restart: unless-stopped
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--cluster.advertise-address=0.0.0.0:9093'
    networks:
      - gasolinera-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:9093/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: gasolinera-node-exporter
    restart: unless-stopped
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - gasolinera-network

  # cAdvisor - Container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: gasolinera-cadvisor
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - gasolinera-network

  # Pushgateway - Metrics for batch jobs
  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: gasolinera-pushgateway
    restart: unless-stopped
    ports:
      - '9091:9091'
    networks:
      - gasolinera-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:9091/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Blackbox Exporter - Endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: gasolinera-blackbox-exporter
    restart: unless-stopped
    ports:
      - '9115:9115'
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - gasolinera-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost:9115/-/healthy',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki - Log aggregation
  loki:
    image: grafana/loki:2.9.2
    container_name: gasolinera-loki
    restart: unless-stopped
    ports:
      - '3100:3100'
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - gasolinera-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3100/ready || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - Log shipping to Loki
  promtail:
    image: grafana/promtail:2.9.2
    container_name: gasolinera-promtail
    restart: unless-stopped
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - gasolinera-network
    depends_on:
      - loki

  # Jaeger - Distributed tracing (All-in-one for development)
  jaeger:
    image: jaegertracing/all-in-one:1.50
    container_name: gasolinera-jaeger
    restart: unless-stopped
    ports:
      - '16686:16686' # Jaeger UI
      - '14268:14268' # Jaeger collector HTTP
      - '14250:14250' # Jaeger collector gRPC
      - '6831:6831/udp' # Jaeger agent UDP
      - '6832:6832/udp' # Jaeger agent UDP
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLECTOR_ZIPKIN_HOST_PORT: ':9411'
    networks:
      - gasolinera-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:14269/ || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Exporter - Redis metrics
  redis-exporter:
    image: oliver006/redis_exporter:v1.55.0
    container_name: gasolinera-redis-exporter
    restart: unless-stopped
    ports:
      - '9121:9121'
    environment:
      REDIS_ADDR: 'redis://redis:6379'
    networks:
      - gasolinera-network
    depends_on:
      - redis

  # PostgreSQL Exporter - Database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: gasolinera-postgres-exporter
    restart: unless-stopped
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_NAME: 'postgresql://gasolinera_user:gasolinera_password@postgres:5432/gasolinera_db?sslmode=disable'
    networks:
      - gasolinera-network
    depends_on:
      - postgres

  # RabbitMQ Exporter - Message queue metrics
  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:v1.0.0-RC19
    container_name: gasolinera-rabbitmq-exporter
    restart: unless-stopped
    ports:
      - '9419:9419'
    environment:
      RABBIT_URL: 'http://rabbitmq:15672'
      RABBIT_USER: 'gasolinera_user'
      RABBIT_PASSWORD: 'gasolinera_password'
    networks:
      - gasolinera-network
    depends_on:
      - rabbitmq

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local

networks:
  gasolinera-network:
    external: true
