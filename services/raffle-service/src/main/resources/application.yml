server:
  port: 8085
  servlet:
    context-path: /raffle-service

spring:
  application:
    name: raffle-service

  datasource:
    url: jdbc:postgresql://localhost:5432/gasolinera_jsm_db
    username: ${DB_USERNAME:gasolinera_user}
    password: ${DB_PASSWORD:gasolinera_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
    open-in-view: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    schemas: raffle_schema

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:gasolinera_user}
    password: ${RABBITMQ_PASSWORD:gasolinera_pass}
    virtual-host: ${RABBITMQ_VHOST:/gasolinera}

  cloud:
    vault:
      enabled: ${VAULT_ENABLED:true}
      host: ${VAULT_HOST:localhost}
      port: ${VAULT_PORT:8200}
      scheme: ${VAULT_SCHEME:http}
      authentication: TOKEN
      token: ${VAULT_TOKEN:dev-token}
      kv:
        enabled: true
        backend: secret
        profile-separator: '/'
        default-context: raffle-service

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.gasolinerajsm.raffleservice: ${LOG_LEVEL:INFO}
    org.springframework.security: WARN
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_LOG_LEVEL:WARN}
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'
    file: '%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n'

# Application specific configuration
raffle:
  service:
    # Default raffle settings
    defaults:
      winner-selection-method: RANDOM
      claim-deadline-days: 30
      verification-required: false
      max-tickets-per-user: 100
      min-tickets-to-participate: 1

    # Prize distribution settings
    distribution:
      algorithm: FAIR_RANDOM
      allow-multiple-wins-per-user: false
      verification-code-length: 6

    # Notification settings
    notifications:
      enabled: true
      winner-notification-delay-minutes: 5
      claim-reminder-days: [7, 3, 1]

    # Validation settings
    validation:
      min-ticket-age-hours: 1
      max-tickets-per-transaction: 100
      duplicate-entry-check: true

# External service URLs
external:
  services:
    auth-service:
      url: ${AUTH_SERVICE_URL:http://localhost:8081}
    coupon-service:
      url: ${COUPON_SERVICE_URL:http://localhost:8083}
    station-service:
      url: ${STATION_SERVICE_URL:http://localhost:8082}
    notification-service:
      url: ${NOTIFICATION_SERVICE_URL:http://localhost:8086}

# Security configuration
security:
  jwt:
    secret: ${JWT_SECRET:raffle-service-secret-key}
    expiration: ${JWT_EXPIRATION:86400}

  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: '*'
    allow-credentials: true

# Actuator configuration
info:
  app:
    name: Raffle Service
    description: Service for managing raffles, tickets, and prize distribution
    version: 1.0.0
    encoding: UTF-8
    java:
      version: 17
